name: "Continuous Integration"

on:
  pull_request:
    branches:
      - "*.x"
      - "master"
  push:

env:
  fail-fast: true

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "${{ matrix.os }}"
    env:
      SYMFONY_REQUIRE: ${{matrix.symfony-version}}

    strategy:
      matrix:
        os:
          - "ubuntu-20.04"
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
        stability:
          - "stable"
        symfony-version:
          - "6.4.*"
          - "7.0.*"
        driver-version:
          - "stable"
        dependencies:
          - "highest"
        include:
          - dependencies: "lowest"
            os: "ubuntu-20.04"
            php-version: "8.1"
            driver-version: "1.5.0"
            stability: "stable"
            symfony-version: "6.4.*"
        exclude:
          - php-version: "8.1"
            symfony-version: "7.0.*"

    services:
      mongodb:
        image: "mongo"
        ports:
          - "27017:27017"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: "mongodb-${{ matrix.driver-version }}"
          key: "extcache-v1"

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          tools: "pecl, flex"
          extensions: "mongodb-${{ matrix.driver-version }}"
          coverage: "pcov"
          ini-values: "zend.assertions=1"

      - name: "Set minimum-stability to stable in Composer"
        run: "composer config minimum-stability ${{ matrix.stability }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit --coverage-clover=coverage.xml"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v4"
        with:
          name: "phpunit-${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}.coverage"
          path: "coverage.xml"

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-20.04"
    needs:
      - "phpunit"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v4"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v4"
        with:
          directory: reports
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
